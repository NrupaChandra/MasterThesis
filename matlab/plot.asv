% Load the nodes and weights data
load('C:\Git\MasterThesis\matlab\nodes_x_with_id.mat', 'nodes_x_with_id');
load('C:\Git\MasterThesis\matlab\nodes_y_with_id.mat', 'nodes_y_with_id');
load('C:\Git\MasterThesis\matlab\weights_with_id.mat', 'weights_with_id');

% Ensure data consistency
if ~isequal(length(nodes_x_with_id), length(nodes_y_with_id), length(weights_with_id))
    error('Mismatch in the number of entries between nodes_x_with_id, nodes_y_with_id, and weights_with_id.');
end

% Number of plots
numPlots = 5;

% Extract IDs from the first column of each data file
allIDs = cellfun(@(x) x{1}, nodes_x_with_id, 'UniformOutput', false);  % Extract IDs as strings

% Randomly select 5 unique IDs
randomIndices = randperm(length(allIDs), numPlots);

% Define folder to save plots
outputFolder = 'C:\Git\MasterThesis\matlab\scatter_plots';  % Change this to your desired folder path
if ~exist(outputFolder, 'dir')
    mkdir(outputFolder);  % Create folder if it doesn't exist
end

% Loop through the selected IDs and plot
for i = 1:numPlots
    % Get the current random index and ID
    currentIndex = randomIndices(i);
    currentID = allIDs{currentIndex};
    
    % Extract corresponding data
    currentNodesX = nodes_x_with_id{currentIndex, 2};  % Second column contains x-coordinates
    currentNodesY = nodes_y_with_id{currentIndex, 2};  % Second column contains y-coordinates
    currentWeights = weights_with_id{currentIndex, 2}; % Second column contains weights
    
    % Create a scatter plot
    figure;
    scatter(currentNodesX, currentNodesY, 50, currentWeights, 'filled');  % Adjust marker size (50) as needed
    colorbar;  % Add colorbar to show weight values
    colormap(jet);  % Use a color map for visualization
    
    % Customize the plot
    title(['Scatter Plot for ID: ' currentID]);
    xlabel('x');
    ylabel('y');
    axis equal;
    grid on;
    
    % Save the plot as a PNG file
    plotFileName = fullfile(outputFolder, ['scatter_plot_ID_' currentID '.png']);
    saveas(gcf, plotFileName);
end
